package org.waman.multiverse

object UnitdefsProperties{
  val version: String = "0.6-SNAPSHOT"

  def getUnitInfo: Seq[UnitInfo[_]] = Seq(
    unit.defs.angle.AngularVelocityUnit,
    unit.defs.angle.FrequencyUnit,
    unit.defs.angle.SolidAngleUnit,
    unit.defs.AngleUnit,
    unit.defs.AreaUnit,
    unit.defs.chem.AmountOfSubstanceUnit,
    unit.defs.chem.CatalysisUnit,
    unit.defs.density.LineDensityUnit,
    unit.defs.DensityUnit,
    unit.defs.em.CapacitanceUnit,
    unit.defs.em.ElectricalConductanceUnit,
    unit.defs.em.ElectricalResistanceUnit,
    unit.defs.em.ElectricChargeUnit,
    unit.defs.em.ElectricCurrentUnit,
    unit.defs.em.ElectricDipoleUnit,
    unit.defs.em.InductanceUnit,
    unit.defs.em.MagneticFieldStrengthUnit,
    unit.defs.em.MagneticFluxUnit,
    unit.defs.em.MagneticFluxDensityUnit,
    unit.defs.em.TimePerLengthUnit,
    unit.defs.em.TimeSquaredPerLengthUnit,
    unit.defs.em.VoltageUnit,
    unit.defs.fluid.DynamicViscosityUnit,
    unit.defs.fluid.KinematicViscosityUnit,
    unit.defs.fluid.PressureUnit,
    unit.defs.fluid.VolumeFlowUnit,
    unit.defs.LengthUnit,
    unit.defs.MassUnit,
    unit.defs.mechanics.AccelerationUnit,
    unit.defs.mechanics.AngularMomentumUnit,
    unit.defs.mechanics.EnergyUnit,
    unit.defs.mechanics.ForceUnit,
    unit.defs.mechanics.MassTorqueUnit,
    unit.defs.mechanics.MomentumUnit,
    unit.defs.mechanics.PowerUnit,
    unit.defs.mechanics.TimeSquaredUnit,
    unit.defs.photometry.IlluminanceUnit,
    unit.defs.photometry.LuminanceUnit,
    unit.defs.photometry.LuminousFluxUnit,
    unit.defs.photometry.LuminousIntensityUnit,
    unit.defs.radioactivity.AbsorbedDoseUnit,
    unit.defs.radioactivity.EquivalentDoseUnit,
    unit.defs.radioactivity.EquivalentDoseRateUnit,
    unit.defs.radioactivity.ExposureUnit,
    unit.defs.radioactivity.RadioactivityUnit,
    unit.defs.radiometry.AreaFrequencyUnit,
    unit.defs.radiometry.IrradianceUnit,
    unit.defs.radiometry.SpectralIrradianceUnit,
    unit.defs.thermo.AbsoluteTemperatureUnit,
    unit.defs.thermo.EntropyUnit,
    unit.defs.thermo.TemperatureUnit,
    unit.defs.TimeUnit,
    unit.defs.VelocityUnit,
    unit.defs.VolumeUnit,

  )
}
